version: '3'

services:
  impakt-frontend:
    container_name: impakt-frontend
    build: 
      context: ./impakt-frontend
      dockerfile: dev.Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - ./impakt-frontend/src:/app/src
      - ./impakt-frontend/public:/app/public
    networks:
      - impakt-network

  impakt-backend:
    container_name: impakt-backend
    restart: always
    build: 
      context: ./impakt-backend
      dockerfile: dev.Dockerfile
    env_file:
      - ./impakt-backend/.env.development
      - ./impakt-backend/.env.local
    ports:
      - "8080:8080"
    volumes:
      - ./impakt-backend/api:/app/api
      - ./impakt-backend/db:/app/db
    networks:
      - impakt-network
    depends_on:
      impakt-database:
        condition: service_healthy
      impakt-minio:
        condition: service_healthy

  
  impakt-database:
    container_name: impakt-database
    image: postgres:16
    ports:
      - "5432:5432"
    networks:
      - impakt-network
    volumes:
      - ./impakt-backend/pgdata:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: impakt
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 2s
      timeout: 2s
      retries: 5
      start_period: 60s

  impakt-minio:
    container_name: impakt-minio
    image: minio/minio
    ports:
      - 9000:9000
      - 9001:9001
    networks:
      - impakt-network
    volumes:
      - ./impakt-backend/minio-data:/data
    environment:
      MINIO_ROOT_USER: minio
      MINIO_ROOT_PASSWORD: minio123
    command: minio server /data
    healthcheck:
      test: ["CMD", "mc", "ready", "local"]
      interval: 2s
      timeout: 2s
      retries: 5
      start_period: 60s
    

    

networks:
  impakt-network:
    driver: bridge
    
    

